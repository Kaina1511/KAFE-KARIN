<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2XM89SoAAAAASUVORK5CYII=
</value>
  </data>
</root>